<?php
/**
 * Helper function that returns an empty variant ready to be set up
 */
function _artesis_frontend_variants_create_variant($term = NULL) {
  if (is_null($term)) {
    return FALSE;
  }

  // Generate some unique names and other needed info
  $handler_name = 'term_view_term_id_' . $term->tid;
  $variant_title = 'Variant for ' . $term->name;
  $access_plugin_settings = array(
    'vid' => $term->vid,
    $term->vid => array(
      $term->tid => $term->tid,
    ),
  );
  $left_panel_pane = 'new-l-' . $term->tid;
  $right_panel_pane = 'new-r-' . $term->tid;
  $pipeline = module_exists('panels_ipe') ? 'ipe' : 'standard';

  // Create a new variant based on an existing term
  $handler = new stdClass;
  $handler->disabled = FALSE; /* Edit this to true to make a default handler disabled initially */
  $handler->api_version = 1;
  $handler->name = $handler_name;
  $handler->task = 'term_view';
  $handler->subtask = '';
  $handler->handler = 'panel_context';
  $handler->weight = -50;
  $handler->conf = array(
    'title' => $variant_title,
    'no_blocks' => 0,
    'pipeline' => $pipeline,
    'body_classes_to_remove' => '',
    'body_classes_to_add' => '',
    'css_id' => '',
    'css' => '',
    'contexts' => array(),
    'relationships' => array(
      0 => array(
        'identifier' => 'Taxonomy vocabulary from Taxonomy term (on taxonomy_term_data.vocabulary)',
        'keyword' => 'taxonomy_vocabulary',
        'name' => 'entity_from_schema:vid-taxonomy_term-taxonomy_vocabulary',
        'context' => 'argument_term_1',
        'id' => 1,
      ),
    ),
    'access' => array(
      'plugins' => array(
        0 => array(
          'name' => 'term',
          'settings' => $access_plugin_settings,
          'context' => 'argument_term_1',
          'not' => FALSE,
        ),
      ),
      'logic' => 'and',
    ),
  );
  $display = new panels_display;
  $display->layout = 'omega_12_mainpage_complex';
  $display->layout_settings = array();
  $display->panel_settings = array(
    'style_settings' => array(
      'default' => NULL,
      'top_left' => NULL,
      'top_right' => NULL,
      'middle' => NULL,
      'bottom_left_small' => NULL,
      'bottom_right_small' => NULL,
      'bottom_medium_right' => NULL,
    ),
  );
  $display->cache = array();
  $display->title = '%term:parent';
  $display->content = array();
  $display->panels = array();

  // Left panel pane - Menu
  $pane = new stdClass;
  $pane->pid = $left_panel_pane;
  $pane->panel = 'top_left';
  $pane->type = 'views';
  $pane->subtype = 'parent_vocabulary_terms';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'override_pager_settings' => 0,
    'use_pager' => 0,
    'nodes_per_page' => '0',
    'pager_id' => '0',
    'offset' => '0',
    'more_link' => 0,
    'feed_icons' => 0,
    'panel_args' => 0,
    'link_to_view' => 0,
    'args' => '',
    'url' => '',
    'display' => 'block_1',
    'context' => array(
      0 => 'relationship_entity_from_schema:vid-taxonomy_term-taxonomy_vocabulary_1.vid',
      1 => '',
    ),
    'override_title' => 1,
    'override_title_text' => '',
  );
  $pane->cache = array();
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 0;
  $pane->locks = array();
  $display->content[$left_panel_pane] = $pane;
  $display->panels['top_left'][0] = $left_panel_pane;

  // Right panel pane - Content
  $pane = new stdClass;
  $pane->pid = $right_panel_pane;
  $pane->panel = 'top_right';
  $pane->type = 'views';
  $pane->subtype = 'taxonomy_term';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'override_pager_settings' => 0,
    'use_pager' => 1,
    'nodes_per_page' => '0',
    'pager_id' => '0',
    'offset' => '0',
    'more_link' => 0,
    'feed_icons' => 0,
    'panel_args' => 1,
    'link_to_view' => 0,
    'args' => '1',
    'url' => '',
    'display' => 'page',
    'context' => array(
      0 => 'argument_term_1.tid',
      1 => '',
    ),
    'override_title' => 0,
    'override_title_text' => '',
  );
  $pane->cache = array();
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 0;
  $pane->locks = array();
  $display->content[$right_panel_pane] = $pane;
  $display->panels['top_right'][0] = $right_panel_pane;
  $display->hide_title = PANELS_TITLE_FIXED;
  $display->title_pane = $right_panel_pane;
  $handler->conf['display'] = $display;

  // Save the handler
  page_manager_save_task_handler($handler);
  return TRUE;
}

/**
 * Implements hook_taxonomy_term_insert().
 */
function artesis_frontend_variants_taxonomy_term_insert($term) {
  $voc = taxonomy_vocabulary_machine_name_load('eddb_editorial_base');
  // Fire logic only for editorial base vocabulary.
  if ($voc && $voc->vid == $term->vid) {
    // Add a menu link
    $link = array();
    $link['link_path'] = 'taxonomy/term/' . $term->tid;
    $link['link_title'] = $term->name;
    $link['menu_name'] = 'main-menu';

    $parent = array_pop($term->parent);
    if ($parent) {
      $parent_term = taxonomy_term_load($parent);
      $plid = artesis_frontend_variants_get_menu_item_mlid($parent_term->name, 'main-menu');

      if ($plid) {
        $link['plid'] = $plid;
      }
    }

    menu_link_save($link);
    menu_cache_clear_all();

    // Add a new variant for the given term.
    ctools_include('plugins');
    $handler = _artesis_frontend_variants_create_variant($term);
    if ($handler) {
      drupal_set_message(t('Variant created for term \'!term\'.', array('!term' => $term->name)));
    }
  }
}

/**
 * Implements hook_taxonomy_term_delete().
 *
 * Since the taxonomy and the menus can be renamed without affecting each other,
 * this will delete only the menus matching the taxonomy term by name.
 */
function artesis_frontend_variants_taxonomy_term_delete($term) {
  $voc = taxonomy_vocabulary_machine_name_load('eddb_editorial_base');
  // Fire logic only for editorial base vocabulary.
  if ($voc->vid == $term->vid) {
    $mlid = artesis_frontend_variants_get_menu_item_mlid($term->name, 'main-menu');

    // Delete menu item
    if ($mlid) {
      menu_link_delete($mlid);
    }

    // Delete variant
    $handler_name = 'term_view_term_id_' . $term->tid;
    $handler = new stdClass;
    $handler->name = $handler_name;
    $handler->handler = 'panel_context';
    ctools_include('plugins');
    page_manager_delete_task_handler($handler);
    drupal_set_message(t('Variant for term \'!term\' deleted.', array('!term' => $term->name)));

  }
}

/**
 * Get menu item id by it's name.
 *
 * @param $name
 *   Menu name to seek.
 * @return
 *   Menu id (mlid), or 0.
 */
function artesis_frontend_variants_get_menu_item_mlid($name, $menu = 'main-menu') {
  $menu_links = menu_load_links($menu);

  foreach ($menu_links as $link) {
    if ($link['link_title'] == $name) {
      return $link['mlid'];
    }
  }

  return 0;
}

/**
 * Implements hook_ctools_plugin_api().
 */
function artesis_frontend_variants_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "page_manager" && $api == "pages_default") {
    return array("version" => "1");
  }
}
